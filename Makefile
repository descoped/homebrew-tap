# Makefile for managing Homebrew formulas

.PHONY: help update-dddns test-formula

# Default target
help:
	@echo "Available targets:"
	@echo "  make update-dddns VERSION=vX.Y.Z  - Update dddns formula to specified version"
	@echo "  make test-formula FORMULA=name    - Test a formula locally"
	@echo ""
	@echo "Example:"
	@echo "  make update-dddns VERSION=v0.1.2"

# Update dddns formula
update-dddns:
ifndef VERSION
	$(error VERSION is required, e.g., make update-dddns VERSION=v0.1.2)
endif
	@echo "Updating dddns formula to version ${VERSION}..."
	@echo "Fetching release information from GitHub..."
	@# Extract version without 'v' prefix
	$(eval VERSION_NO_V := $(shell echo ${VERSION} | sed 's/^v//'))
	@echo "Version without prefix: ${VERSION_NO_V}"

	@# Fetch SHA256 checksums for Darwin builds
	@echo "Fetching Darwin x86_64 checksum..."
	$(eval SHA_DARWIN_X86 := $(shell curl -sL https://github.com/descoped/dddns/releases/download/${VERSION}/dddns_Darwin_x86_64.tar.gz | shasum -a 256 | cut -d' ' -f1))
	@echo "Darwin x86_64 SHA256: ${SHA_DARWIN_X86}"

	@echo "Fetching Darwin arm64 checksum..."
	$(eval SHA_DARWIN_ARM := $(shell curl -sL https://github.com/descoped/dddns/releases/download/${VERSION}/dddns_Darwin_arm64.tar.gz | shasum -a 256 | cut -d' ' -f1))
	@echo "Darwin arm64 SHA256: ${SHA_DARWIN_ARM}"

	@# Generate the formula
	@echo "Generating formula..."
	@cat > Formula/dddns.rb <<EOF
	# typed: false
	# frozen_string_literal: true

	# This file was generated by 'make update-dddns'. DO NOT EDIT manually.
	# To update: make update-dddns VERSION=vX.Y.Z
	class Dddns < Formula
	  desc "Lightweight Dynamic DNS client with multi-provider support"
	  homepage "https://github.com/descoped/dddns"
	  version "${VERSION_NO_V}"
	  license "MIT"

	  if Hardware::CPU.intel?
	    url "https://github.com/descoped/dddns/releases/download/${VERSION}/dddns_Darwin_x86_64.tar.gz"
	    sha256 "${SHA_DARWIN_X86}"

	    def install
	      bin.install "dddns"
	    end
	  end

	  if Hardware::CPU.arm?
	    url "https://github.com/descoped/dddns/releases/download/${VERSION}/dddns_Darwin_arm64.tar.gz"
	    sha256 "${SHA_DARWIN_ARM}"

	    def install
	      bin.install "dddns"
	    end
	  end

	  test do
	    system "#{bin}/dddns", "--version"
	  end

	  def caveats
	    <<~EOS
	      To get started with dddns:
	        1. Create configuration: dddns config init
	        2. Edit configuration: vi ~/.dddns/config.yaml
	        3. Test: dddns update --dry-run

	      For automatic updates via cron:
	        */30 * * * * /usr/local/bin/dddns update >> /var/log/dddns.log 2>&1
	    EOS
	  end
	end
	EOF
	@echo "✅ Formula updated successfully!"
	@echo ""
	@echo "Next steps:"
	@echo "1. Test locally: brew install --build-from-source Formula/dddns.rb"
	@echo "2. Commit changes: git add Formula/dddns.rb && git commit -m 'Update dddns to ${VERSION}'"
	@echo "3. Push to repository: git push origin main"

# Test a formula locally
test-formula:
ifndef FORMULA
	$(error FORMULA is required, e.g., make test-formula FORMULA=dddns)
endif
	@echo "Testing formula: ${FORMULA}"
	brew install --build-from-source Formula/${FORMULA}.rb
	@echo "✅ Formula test completed!"